name: Deploy to OpenShift

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  NAMESPACE: ${{ secrets.NAMESPACE }}
  APP_NAME: ${{ secrets.APP_NAME }}
  PORT: ${{ secrets.PORT }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Build with Maven
      run: mvn -B clean package -DskipTests
    
    - name: Install OpenShift CLI
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        openshift-cli: 'latest'
    
    - name: Login to OpenShift
      run: |
        oc login --token=${{ secrets.OPENSHIFT_TOKEN }} --server=${{ secrets.OPENSHIFT_SERVER }}
        oc project ${{ secrets.NAMESPACE }}
    
    - name: Deploy Application
      run: |
        # Create a new app or update existing one
        if ! oc get deployment ${{ env.APP_NAME }} &> /dev/null; then
          # Create new app if it doesn't exist
          oc new-app . --name=${{ env.APP_NAME }} \
            --strategy=docker \
            -e SPRING_PROFILES_ACTIVE=${{ env.SPRING_PROFILES_ACTIVE }} \
            -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
            -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          
          # Expose the service
          oc expose svc/${{ env.APP_NAME }}
        else
          # Start a new build for existing app
          oc start-build ${{ env.APP_NAME }} --from-dir=. --follow
        fi
        
        # Configure health checks
        oc set probe deployment/${{ env.APP_NAME }} \
          --liveness \
          --get-url=http://:${{ env.PORT }}/actuator/health \
          --initial-delay-seconds=60 \
          --timeout-seconds=5
          
        oc set probe deployment/${{ env.APP_NAME }} \
          --readiness \
          --get-url=http://:${{ env.PORT }}/actuator/health \
          --initial-delay-seconds=30 \
          --timeout-seconds=5
        
        # Wait for deployment to complete
        oc rollout status deployment/${{ env.APP_NAME }}

